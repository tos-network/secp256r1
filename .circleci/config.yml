version: 2.1

executors:
  standard:
    docker:
      - image: cimg/base:2021.05 

jobs:
  check-code-format:
    executor: standard
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y install clang-format
      - run:
          name: Check code formatting
          command: |
            cd src && clang-format --dry-run --Werror *.c *.h
            cd ../test && clang-format --dry-run --Werror *.c

  build:
    executor: standard
    steps:
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y install build-essential automake autoconf libtool patchelf
      - checkout
      - run: git submodule init
      - run: git submodule update
      - run:
          name: Build OpenSSL
          command: |
            cd openssl
            ./Configure enable-ec_nistp_64_gcc_128 no-stdio no-ocsp no-nextprotoneg no-module \
                        no-legacy no-gost no-engine no-dynamic-engine no-deprecated no-comp \
                        no-cmp no-capieng no-ui-console no-tls no-ssl no-dtls no-aria no-bf \
                        no-blake2 no-camellia no-cast no-chacha no-cmac no-des no-dh no-dsa \
                        no-ecdh no-idea no-md4 no-mdc2 no-ocb no-poly1305 no-rc2 no-rc4 no-rmd160 \
                        no-scrypt no-seed no-siphash no-siv no-sm2 no-sm3 no-sm4 no-whirlpool
            make build_generated libcrypto.so
            cd ../
      - run:
          name: Build project
          command: |
            make
      - persist_to_workspace:
          root: build
          paths:
            - test_*.out
            - libs

  check-memory-leaks:
    executor: standard
    steps:
      - checkout
      - attach_workspace:
          at: build
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y install valgrind
      - run:
          name: Check for memory leaks
          command: |
            ls build/test_*.out | xargs -n 1 valgrind --leak-check=full --error-exitcode=255
workflows:
  main:
    jobs:
      - check-code-format
      - build:
          requires:
            - check-code-format
      - check-memory-leaks:
          requires:
            - build